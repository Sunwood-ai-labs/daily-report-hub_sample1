name: Sync to Daily Report Hub
on:
  push:
    branches: [main, master]
  pull_request:
    types: [merged]

jobs:
  sync-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 全履歴を取得してその日の全コミットを追跡
      
      - name: Get repository info and daily activities
        run: |
          # リポジトリ名と日付を取得
          REPO_NAME=$(basename $GITHUB_REPOSITORY)
          DATE=$(date '+%Y-%m-%d')
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "DATE=$DATE" >> $GITHUB_ENV
          
          echo "🔍 Fetching all commits for $DATE..."
          
          # その日の全コミット履歴を取得（時刻順）
          git log --since="$DATE 00:00:00" --until="$DATE 23:59:59" \
            --pretty=format:"%h|%s|%an|%ad|%f" --date=format:'%H:%M:%S' \
            --reverse > daily_commits.txt
          
          # コミット数をカウント
          COMMIT_COUNT=$(wc -l < daily_commits.txt)
          echo "📊 Found $COMMIT_COUNT commits for today"
          
          # その日の全ての差分を統合（最初のコミットから最新まで）
          FIRST_COMMIT_TODAY=$(git log --since="$DATE 00:00:00" --pretty=format:"%H" --reverse | head -1)
          LAST_COMMIT_TODAY=$(git log --since="$DATE 00:00:00" --pretty=format:"%H" | head -1)
          
          if [ ! -z "$FIRST_COMMIT_TODAY" ] && [ ! -z "$LAST_COMMIT_TODAY" ]; then
            if [ "$FIRST_COMMIT_TODAY" != "$LAST_COMMIT_TODAY" ]; then
              # 複数コミットがある場合：その日の最初から最後までの差分
              PARENT_OF_FIRST=$(git rev-parse $FIRST_COMMIT_TODAY^)
              git diff $PARENT_OF_FIRST..$LAST_COMMIT_TODAY --name-status > daily_cumulative_diff.txt
              git diff $PARENT_OF_FIRST..$LAST_COMMIT_TODAY --stat > daily_diff_stats.txt
            else
              # 1つのコミットのみの場合：そのコミットの差分
              git diff $FIRST_COMMIT_TODAY^ $FIRST_COMMIT_TODAY --name-status > daily_cumulative_diff.txt
              git diff $FIRST_COMMIT_TODAY^ $FIRST_COMMIT_TODAY --stat > daily_diff_stats.txt
            fi
          else
            echo "No commits found for today" > daily_cumulative_diff.txt
            echo "No commits found for today" > daily_diff_stats.txt
          fi
          
          # 最新コミットの個別差分
          git diff HEAD~1 --name-status > latest_diff.txt 2>/dev/null || echo "No recent diff" > latest_diff.txt
          
          # 詳細なアクティビティサマリーを作成
          if [ -s daily_commits.txt ]; then
            FIRST_COMMIT_TIME=$(head -1 daily_commits.txt | cut -d'|' -f4)
            LAST_COMMIT_TIME=$(tail -1 daily_commits.txt | cut -d'|' -f4)
            FILES_CHANGED=$(wc -l < daily_cumulative_diff.txt)
          else
            FIRST_COMMIT_TIME="N/A"
            LAST_COMMIT_TIME="N/A" 
            FILES_CHANGED=0
          fi
          
          cat > daily_summary.txt << EOF
          📅 Daily Activity Report
          Repository: $GITHUB_REPOSITORY
          Date: $DATE
          Total Commits: $COMMIT_COUNT
          Files Changed: $FILES_CHANGED
          First Activity: $FIRST_COMMIT_TIME
          Last Activity: $LAST_COMMIT_TIME
          Sync Time: $(date '+%H:%M:%S')
          
          📝 Commit Details:
          $(cat daily_commits.txt | while IFS='|' read hash subject author time slug; do
            echo "  ⏰ $time - $hash: $subject ($author)"
          done)
          EOF
          
          echo "✅ Daily activity analysis complete!"
      
      - name: Clone and update report hub
        env:
          GITHUB_TOKEN: ${{ secrets.REPORT_TOKEN }}
        run: |
          # Git設定
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # daily-report-hubをクローン
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/Sunwood-ai-labs/daily-report-hub.git
          
          # 日付ベースのディレクトリ構造を作成
          TARGET_DIR="daily-report-hub/activities/$DATE/$REPO_NAME"
          mkdir -p "$TARGET_DIR"
          
          # README.mdをコピー
          cp README.md "$TARGET_DIR/" 2>/dev/null || echo "# $REPO_NAME" > "$TARGET_DIR/README.md"
          
          # 当日のアクティビティファイルをコピー
          cp daily_commits.txt "$TARGET_DIR/"
          cp daily_cumulative_diff.txt "$TARGET_DIR/"
          cp daily_diff_stats.txt "$TARGET_DIR/"
          cp latest_diff.txt "$TARGET_DIR/"
          cp daily_summary.txt "$TARGET_DIR/"
          
          # 詳細メタデータを作成
          COMMIT_COUNT=$(wc -l < daily_commits.txt)
          FILES_CHANGED=$(wc -l < daily_cumulative_diff.txt)
          
          cat > "$TARGET_DIR/metadata.json" << EOF
          {
            "repository": "$GITHUB_REPOSITORY",
            "date": "$DATE",
            "branch": "$GITHUB_REF_NAME",
            "latest_commit_sha": "$GITHUB_SHA",
            "sync_timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "workflow_run": "$GITHUB_RUN_ID",
            "daily_commit_count": $COMMIT_COUNT,
            "daily_files_changed": $FILES_CHANGED,
            "has_activity": $([ $COMMIT_COUNT -gt 0 ] && echo "true" || echo "false")
          }
          EOF
          
          # タイムスタンプ付きでコミット・プッシュ
          cd daily-report-hub
          git add .
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "📊 Daily sync: $REPO_NAME ($DATE) - $COMMIT_COUNT commits"
            git push
          fi